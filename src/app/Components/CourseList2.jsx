// //"use server"
// //"use client"
// import React from "react";
// import { useState, useEffect } from "react";
// import { fetchCourses } from "@/app/lib/db";
// import Link from "next/link";
// export const metadata = {
//     title: "Course Information",
//     description: "Generated by create next app",
//   };
// const CourseList = async () =>{
//     const coursesList = await fetchCourses();
    
//     let courseType = "computing";
//     courseTable(courseType);
//     courseType = "design";
//     courseTable(courseType);
//     function courseTable (courseType){
//         useEffect(()=>{
//       let elementId = "null";
//     if(courseType == "computing"){ elementId = "computingCoursesData";}
//     else if(courseType == "design"){ elementId = "designCoursesData";}
//     const courseTable = document.getElementById(elementId);
//     fetch(coursesList)
//         .then(response => response.json())
//         .then(data => {
//           console.dir(data);
//           data.forEach((item) => {
//             const row1 = document.createElement("tr");
//             const courseName = document.createElement("td");
            
//             const ucasPoints = document.createElement("td");
//             const ucasCode = document.createElement("td");
            
            
//             const row2 = document.createElement("tr");
//             const awardName = document.createElement("td");
//             const isUndergraduate = document.createElement("td");
//             const isRecruiting = document.createElement("td");
    
//             const entryYear = document.createElement("td");
//             const studyLength = document.createElement("td");
//             const hasFoundation = document.createElement("td");
    
//             const row3 = document.createElement("tr");
//             const isFullTime = document.createElement("td");
//             const courseDescription = document.createElement("td");
//             const row4 = document.createElement("tr");
    
//             courseName.textContent = item.CourseTitle;
//             ucasPoints.textContent = item.UcasPoints;
//             ucasCode.textContent = item.UcasCode;
//             awardName.textContent = item.CourseAwardName;
//             isUndergraduate.textContent = item.CourseType;
//             isRecruiting.textContent = item.NoLongerRecruiting;
//             isRecruiting.textContent === "false"?isRecruiting.textContent = "Recruiting": isRecruiting.textContent = "Not Recruiting";}
//             entryYear.textContent = item.YearOfEntry;
//             studyLength.textContent = item.StudyLength;
//             hasFoundation.textContent = item.HasFoundationYear;
//             hasFoundation.textContent === "false") ?hasFoundation.textContent = "No Foundation Year" :hasFoundation.textContent = "Has Foundation Year";}
//             isFullTime.textContent = item.ModeOfAttendance;
//             courseDescription.textContent = item.CourseSummary;
//             row1.appendChild(courseName);
//             row1.appendChild(ucasPoints);
//             row1.appendChild(ucasCode);
//             row2.appendChild(awardName);
//             row2.appendChild(isUndergraduate);
//             row2.appendChild(isRecruiting);
//             row3.appendChild(entryYear);
//             row3.appendChild(studyLength);
//             row3.appendChild(hasFoundation);
//             row4.appendChild(isFullTime);
//             row4.appendChild(courseDescription);
            
    
//             courseTable.appendChild(row1);
//             courseTable.appendChild(row2);
//             courseTable.appendChild(row3);
//             courseTable.appendChild(row4);
    
    
    
//             // row.appendChild(nameCell);
//             //     row.appendChild(emailCell);
//             //     staffTable.appendChild(row);
    
    
    
    
    
//           });
//         })
// });
// };

//     return(
//         <div className="courseLists">
//             <div className="infoBox" id="courseListBox">
//                 <table className="table">
//                     <thead>
//                         <tr>
//                             <th>Computing Courses</th>
//                         </tr>
//                     </thead>
//                     <tbody id="computingCoursesData">
                        
//                     </tbody>
//                 </table>
//             </div>
//             <div className="infoBox" id="courseListBox">
//                 <table className="table">
//                     <thead>
//                         <tr>
//                             <th>Design Courses</th>
//                         </tr>
//                     </thead>
//                     <tbody id="designCoursesData">

//                     </tbody>
//                 </table>
//             </div>
        

//         </div>
//     )
// }
// export default CourseList;
//"use server"
"use client"
import React from "react";
import { useState, useEffect } from "react";
//import { fetchCourses } from "@/app/lib/db";
import Link from "next/link";
// export const metadata = {
//     title: "Course Information",
//     description: "Generated by create next app",
//   };
const CourseList = ({courseListData}) =>{
    const [computingCourses, SetComputingCourses] = useState([]);
        const [designCourses, SetDesignCourses] = useState([]);
        useEffect(()=> {
            const computing = courseListData.filter((item) => item.CourseSubject=== "Computing");
            const design = courseListData.filter((item) => item.CourseSubject=== "Art and design");
    
            SetComputingCourses(computing);
            SetDesignCourses(design);
        }, [courseListData]);
        const computing = courseListData.filter((item) => item.CourseSubject=== "Computing");
        const design = courseListData.filter((item) => item.CourseSubject=== "Art and design");

    // const coursesList = await fetchCourses();
    
    // let courseType = "computing";
    // courseTable(courseType);
    // courseType = "design";
    // courseTable(courseType);
    CourseTable(computing);
    CourseTable(design);
    function CourseTable(courses){
        useEffect(()=>{
      let elementId = "null";
      //let courseListType = "null";
      
      console.dir(courses);
      courses.forEach((item) => {
            if(item.CourseSubject == "computing"){ elementId = "computingCoursesData";}
            else if(item.CourseSubject == "design"){ elementId = "designCoursesData";}
            const courseTable = document.getElementById(elementId);
            const row1 = document.createElement("tr");
            const courseName = document.createElement("td");
            
            const ucasPoints = document.createElement("td");
            const ucasCode = document.createElement("td");
            
            
            const row2 = document.createElement("tr");
            const awardName = document.createElement("td");
            const isUndergraduate = document.createElement("td");
            const isRecruiting = document.createElement("td");
    
            const entryYear = document.createElement("td");
            const studyLength = document.createElement("td");
            const hasFoundation = document.createElement("td");
    
            const row3 = document.createElement("tr");
            const isFullTime = document.createElement("td");
            const courseDescription = document.createElement("td");
            const row4 = document.createElement("tr");
    
            courseName.textContent = item.CourseTitle;
            ucasPoints.textContent = item.UcasPoints;
            ucasCode.textContent = item.UcasCode;
            awardName.textContent = item.CourseAwardName;
            isUndergraduate.textContent = item.CourseType;
            isRecruiting.textContent = item.NoLongerRecruiting;
            {isRecruiting.textContent ==="false"?"Recruiting":"Not Recruiting"}
            entryYear.textContent = item.YearOfEntry;
            studyLength.textContent = item.StudyLength;
            hasFoundation.textContent = item.HasFoundationYear;
            {hasFoundation.textContent ==="true"?"Has Foundation Year":"No Foundation Year"}
            isFullTime.textContent = item.ModeOfAttendance;
            courseDescription.textContent = item.CourseSummary;
            row1.appendChild(courseName);
            row1.appendChild(ucasPoints);
            row1.appendChild(ucasCode);
            row2.appendChild(awardName);
            row2.appendChild(isUndergraduate);
            row2.appendChild(isRecruiting);
            row3.appendChild(entryYear);
            row3.appendChild(studyLength);
            row3.appendChild(hasFoundation);
            row4.appendChild(isFullTime);
            row4.appendChild(courseDescription);
            
    
            courseTable.appendChild(row1);
            courseTable.appendChild(row2);
            courseTable.appendChild(row3);
            courseTable.appendChild(row4);
    
    
    

    
    
    
    
    
          });
        })
        // .catch(error => {
        //     console.error("Error loading DATA:", error);
        // });
      

};

    return(
        <div className="courseLists">
            <div className="infoBox" id="courseListBox">
                <table className="table">
                    <thead>
                        <tr>
                            <th>Computing Courses</th>
                        </tr>
                    </thead>
                    <tbody id="computingCoursesData">
                        
                    </tbody>
                </table>
            </div>
            <div className="infoBox" id="courseListBox">
                <table className="table">
                    <thead>
                        <tr>
                            <th>Design Courses</th>
                        </tr>
                    </thead>
                    <tbody id="designCoursesData">

                    </tbody>
                </table>
            </div>
        

        </div>
    )
}
export default CourseList;